<webParts>
  <webPart xmlns="http://schemas.microsoft.com/WebPart/v3">
    <metaData>
      <type name="Microsoft.SharePoint.WebPartPages.DataFormWebPart, Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" />
      <importErrorMessage>Cannot import this Web Part.</importErrorMessage>
    </metaData>
    <data>
      <properties>
        <property name="InitialAsyncDataFetch" type="bool">False</property>
        <property name="ChromeType" type="chrometype">None</property>
        <property name="Title" type="string">nSPTiles1_5</property>
        <property name="Height" type="string" />
        <property name="CacheXslStorage" type="bool">True</property>
        <property name="XslLink" type="string" null="true" />
        <property name="AllowZoneChange" type="bool">True</property>
        <property name="AllowEdit" type="bool">True</property>
        <property name="XmlDefinitionLink" type="string" />
        <property name="DataFields" type="string">@Title,group name;@nActive,active;@nTileCustomID,tile custom ID;@nTileCustomClassEs,tile custom class(es);@nTileWidth,tile width;@nTileHeight,tile height;@nTileLeftOffset,tile left offset;@nTileTopOffset,tile top offset;@nTileBorderWidth,tile border width;@nTileZoomOnHover,tile zoom on hover;@nTileBackgroundColor,tile background color;@nTileBackgroundOpacity,tile background opacity;@nTileBackgroundColorOnHover,tile background color on hover;@nTileBackgroundOpacityOnHover,tile background opacity on hover;@nTileImageURL,tile image URL;@nTileImageOpacity,tile image opacity;@nTileImageURLOnHover,tile image URL on hover;@nTileImageOpacityOnHover,tile image opacity on hover;@nTileImagePosition,tile image position;@nTileImageWidth,tile image width;@nTileImageHeight,tile image height;@nTileImagePadding,tile image padding;@nTileFAClass,tile FA class;@nTileFAStyle,tile FA style;@nTileFAOpacity,tile FA opacity;@nTileFAClassOnHover,tile FA class on hover;@nTileFAStyleOnHover,tile FA style on hover;@nTileFAOpacityOnHover,tile FA opacity on hover;@nTileFAPosition,tile FA position;@nTileFAPadding,tile FA padding;@nTileLinkType,tile link type;@nTileLinkURL,tile Link URL;@nIsHeading,is heading;@nHeadingContent,heading content;@nHeadingFontColor,heading font color;@nHeadingContentOnHover,heading content on hover;@nHeadingFontColorOnHover,heading font color on hover;@nHeadingPosition,heading position;@nHeadingPadding,heading padding;@nHeadingFontSize,heading font size;@nBoldHeading,bold heading;@nHeadingStyle,heading style;@nSliderHeadingHeight,slider heading height;@nSliderBodyContent,slider body content;@nSliderBodyPosition,slider body position;@nSliderBodyPadding,slider body padding;@nSliderBodyFontSize,slider body font size;@nSliderBodyFontColor,slider body font color;@nSliderBodyStyle,slider body style;@nSliderBackgroundColor,slider background color;@nSliderBackgroundOpacity,slider background opacity;@nSliderBackgroundColorOnHover,slider background color on hover;@nSliderBackgroundOpacityOnHover,slider background opacity on hover;@nCcTileStyle,cc tile style;@nCcTileContentWrapperStyle,cc tile content wrapper style;@nCcTileRightEdge,cc tile right edge;@nCcTileBottomEdge,cc tile bottom edge;@nCcTileBackgroundClass,cc tile background class;@nCcTileBackgroundStyle,cc tile background style;@nCcTileBackgroundClassOnHover,cc tile background class on hover;@nCcTileBackgroundStyleOnHover,cc tile background style on hover;@nCcTileImagePositionStyle,cc tile image position style;@nCcTileImageClass,cc tile image class;@nCcTileImageStyle,cc tile image style;@nCcTileImageClassOnHover,cc tile image class on hover;@nCcTileImageStyleOnHover,cc tile image style on hover;@nCcTileFAPositionStyle,cc tile FA position style;@nCcTileFAClass,cc tile FA class;@nCcTileFAStyle,cc tile FA style;@nCcTileFAClassOnHover,cc tile FA class on hover;@nCcTileFAStyleOnHover,cc tile FA style on hover;@nCcHeadingPositionStyle,cc heading position style;@nCcHeadingClass,cc heading class;@nCcHeadingStyle,cc heading style;@nCcHeadingClassOnHover,cc heading class on hover;@nCcHeadingStyleOnHover,cc heading style on hover;@nCcSliderContentStyle,cc slider content style;@nCcSliderPositionStyle,cc slider position style;@nCcSliderBodyClass,cc slider body class;@nCcSliderBodyStyle,cc slider body style;@nCcSliderBackgroundClass,cc slider background class;@nCcSliderBackgroundStyle,cc slider background style;@nCcSliderBackgroundClassOnHover,cc slider background class on hover;@nCcSliderBackgroundStyleOnHover,cc slider background style on hover;@ID,ID;@ContentType,Content Type;@Modified,Modified;@Created,Created;@Author,Created By;@Editor,Modified By;@_UIVersionString,Version;@Attachments,Attachments;@File_x0020_Type,File Type;@FileLeafRef,Name (for use in forms);@FileDirRef,Path;@FSObjType,Item Type;@_HasCopyDestinations,Has Copy Destinations;@_CopySource,Copy Source;@ContentTypeId,Content Type ID;@_ModerationStatus,Approval Status;@_UIVersion,UI Version;@Created_x0020_Date,Created;@FileRef,URL Path;@ItemChildCount,Item Child Count;@FolderChildCount,Folder Child Count;</property>
        <property name="AutoRefreshInterval" type="int">60</property>
        <property name="NoDefaultStyle" type="string">TRUE</property>
        <property name="ListDisplayName" type="string" null="true" />
        <property name="AutoRefresh" type="bool">False</property>
        <property name="ViewFlag" type="string">8</property>
        <property name="ListUrl" type="string" null="true" />
        <property name="AllowConnect" type="bool">True</property>
        <property name="Description" type="string" />
        <property name="AllowClose" type="bool">True</property>
        <property name="ShowWithSampleData" type="bool">False</property>
        <property name="ParameterBindings" type="string">&lt;ParameterBinding Name="nSPTilesJSPath" Location="None" DefaultValue="/Site Stuff/nSPTiles/1.5/nSPTiles.js"/&gt;
&lt;ParameterBinding Name="FontAwesomeCSSPath" Location="None" DefaultValue="/Site%20Stuff/fa/css/font-awesome.min.css"/&gt;
&lt;ParameterBinding Name="GroupName" Location="None" DefaultValue="test 1"/&gt;
&lt;ParameterBinding Name="AnimationSpeedInMillisecond" Location="None" DefaultValue="100"/&gt;
&lt;ParameterBinding Name="AnimationTypeOn" Location="None" DefaultValue="slide"/&gt;
&lt;ParameterBinding Name="AnimationTypeOff" Location="None" DefaultValue="bounce"/&gt;
&lt;ParameterBinding Name="TileOnClick" Location="None" DefaultValue="null"/&gt;</property>
        <property name="Xsl" type="string">&lt;!-- nSPTiles 1.5 | http://nsptiles.js.org/ | Copyright (c) 2015 Anchal Nigam (imthenachoman@gmail.com)| MIT license (http://opensource.org/licenses/mit) --&gt;
&lt;xsl:stylesheet xmlns:x="http://www.w3.org/2001/XMLSchema" xmlns:d="http://schemas.microsoft.com/sharepoint/dsp" version="1.0" exclude-result-prefixes="xsl msxsl ddwrt" xmlns:ddwrt="http://schemas.microsoft.com/WebParts/v2/DataView/runtime" xmlns:asp="http://schemas.microsoft.com/ASPNET/20" xmlns:__designer="http://schemas.microsoft.com/WebParts/v2/DataView/designer" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:SharePoint="Microsoft.SharePoint.WebControls" xmlns:ddwrt2="urn:frontpage:internal"&gt;
    &lt;xsl:output method="html" indent="no"/&gt;
    &lt;!-- https://msdn.microsoft.com/en-us/library/dd583143%28v=office.11%29.aspx and https://msdn.microsoft.com/en-us/library/office/ff806158%28v=office.14%29.aspx --&gt;
    &lt;xsl:param name="ListUrlDir_FALSE" /&gt;
    &lt;!-- all the input settings --&gt;
    &lt;xsl:param name="nSPTilesJSPath"&gt;/Site Stuff/nSPTiles/1.5/nSPTiles.js&lt;/xsl:param&gt;
    &lt;xsl:param name="FontAwesomeCSSPath"&gt;/Site%20Stuff/fa/css/font-awesome.min.css&lt;/xsl:param&gt;
    &lt;xsl:param name="GroupName"&gt;test 1&lt;/xsl:param&gt;
    &lt;xsl:param name="AnimationSpeedInMillisecond"&gt;100&lt;/xsl:param&gt;
    &lt;xsl:param name="AnimationTypeOn"&gt;slide&lt;/xsl:param&gt;
    &lt;xsl:param name="AnimationTypeOff"&gt;slide&lt;/xsl:param&gt;
    &lt;xsl:param name="TileOnClick"&gt;null&lt;/xsl:param&gt;

    &lt;xsl:variable name="TileGroupID" select="concat('nTiles_', translate($GroupName, translate($GroupName, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', ''), ''))" /&gt;

    &lt;xsl:template match="/" xmlns:x="http://www.w3.org/2001/XMLSchema" xmlns:d="http://schemas.microsoft.com/sharepoint/dsp" xmlns:asp="http://schemas.microsoft.com/ASPNET/20" xmlns:__designer="http://schemas.microsoft.com/WebParts/v2/DataView/designer" xmlns:SharePoint="Microsoft.SharePoint.WebControls"&gt;
        &lt;xsl:call-template name="tiles" /&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template name="debug"&gt;
        &lt;ul&gt;
            &lt;xsl:for-each select="/dsQueryResponse/Rows/Row"&gt;
                &lt;li&gt;
                    &lt;xsl:value-of select="@ID" /&gt;: &lt;xsl:value-of select="@Title" /&gt;
                    &lt;ul&gt;
                        &lt;xsl:for-each select="@*"&gt;
                            &lt;li&gt;&lt;xsl:value-of select="name()" /&gt;: &lt;xsl:value-of select="." /&gt;&lt;/li&gt;
                        &lt;/xsl:for-each&gt;
                    &lt;/ul&gt;
                &lt;/li&gt;
            &lt;/xsl:for-each&gt;
        &lt;/ul&gt;
    &lt;/xsl:template&gt;

    &lt;!-- function to make position html | http://blog.joachim-selke.de/2011/01/stripping-html-tags-in-xslt/ --&gt;
    &lt;xsl:template name="makePositionHTML"&gt;
        &lt;xsl:param name="className" /&gt;
        &lt;xsl:param name="tableStyle" /&gt;
        &lt;xsl:param name="row1Style" /&gt;
        &lt;xsl:param name="cell1Content" /&gt;
        &lt;xsl:param name="row2Style" /&gt;
        &lt;xsl:param name="cell2Content" /&gt;
        &lt;div class="nTilePositionTable {$className}" style="{$tableStyle}"&gt;
            &lt;div class="nTilePositionRow nTilePositionRow1"&gt;
                &lt;div class="nTilePositionCell" style="{$row1Style}"&gt;
                    &lt;xsl:copy-of select="$cell1Content" /&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;xsl:if test="$row2Style != ''"&gt;
                &lt;div class="nTilePositionRow nTilePositionRow2"&gt;
                    &lt;div class="nTilePositionCell" style="{$row2Style}"&gt;
                        &lt;xsl:copy-of select="$cell2Content" /&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/xsl:if&gt;
        &lt;/div&gt;
    &lt;/xsl:template&gt;

    &lt;!-- function to strip HTML tags --&gt;
    &lt;xsl:template name="strip-tags"&gt;
        &lt;xsl:param name="text" /&gt;
        &lt;xsl:choose&gt;
            &lt;xsl:when test="contains($text, '&amp;lt;')"&gt;
                &lt;xsl:value-of select="normalize-space(substring-before($text, '&amp;lt;'))" /&gt;
                &lt;xsl:call-template name="strip-tags"&gt;
                    &lt;xsl:with-param name="text" select="normalize-space(substring-after($text, '&amp;gt;'))" /&gt;
                &lt;/xsl:call-template&gt;
            &lt;/xsl:when&gt;
            &lt;xsl:otherwise&gt;
                &lt;xsl:value-of select="normalize-space($text)" /&gt;
            &lt;/xsl:otherwise&gt;
        &lt;/xsl:choose&gt;
    &lt;/xsl:template&gt;

    &lt;!-- main tiles template for generating the necessary HTML --&gt;
    &lt;xsl:template name="tiles"&gt;
        &lt;!-- necessary JS and CSS references --&gt;
        &lt;script type="text/javascript" src="{$nSPTilesJSPath}"&gt;&lt;/script&gt;
        &lt;link rel="stylesheet" href="{$FontAwesomeCSSPath}" /&gt;
        &lt;!-- the root div for the wrapper --&gt;
        &lt;div class="nTilesWrapper" id="{$TileGroupID}"&gt;
            &lt;!-- if we have admin access then generate the admin stuff --&gt;
            &lt;xsl:if test="ddwrt:IfHasRights(4)"&gt;
                &lt;span class="nTileAdminLinks"&gt;
                    &lt;span class="nTileAdminLinksOff"&gt;...&lt;/span&gt;
                    &lt;span class="nTileAdminLinksOn"&gt;
                    	&lt;b&gt;actions&lt;/b&gt;:&amp;#160;&lt;a href="#" title="add a tile" onclick="nSPTiles.addOrMoveTile(this, 'New', '{$TileGroupID}'); return false"&gt;add&lt;/a&gt;&amp;#160;|&amp;#160;&lt;a href="#" title="move a tile" onclick="nSPTiles.moveCloneEditOrDeleteTile(this, 'Update', '{$TileGroupID}'); return false"&gt;move&lt;/a&gt;&amp;#160;|&amp;#160;&lt;a href="#" title="clone a tile" onclick="nSPTiles.moveCloneEditOrDeleteTile(this, 'Clone', '{$TileGroupID}'); return false;"&gt;clone&lt;/a&gt;&amp;#160;|&amp;#160;&lt;a href="#" title="edit a tile" onclick="nSPTiles.moveCloneEditOrDeleteTile(this, 'Edit', '{$TileGroupID}'); return false;"&gt;edit&lt;/a&gt;&amp;#160;|&amp;#160;&lt;a href="#" title="delete a tile" onclick="nSPTiles.moveCloneEditOrDeleteTile(this, 'Delete', '{$TileGroupID}'); return false;"&gt;delete&lt;/a&gt;&amp;#160;|&amp;#160;&lt;a href="#" title="tile info" onclick="nSPTiles.moveCloneEditOrDeleteTile(this, 'Info', '{$TileGroupID}'); return false;"&gt;info&lt;/a&gt;&amp;#160;|&amp;#160;&lt;a href="{$ListUrlDir_FALSE}?FilterField1=LinkTitle&amp;amp;FilterValue1={$GroupName}" title="open the list in a new window" target="_blank"&gt;list&lt;/a&gt;
                    &lt;/span&gt;
                &lt;/span&gt;
            &lt;/xsl:if&gt;
            &lt;!-- render tiles --&gt;
            &lt;xsl:choose&gt;
                &lt;xsl:when test="count(/dsQueryResponse/Rows/Row) &amp;gt; 0"&gt;
                    &lt;!-- we have at least one tile to render --&gt;
                    &lt;xsl:variable name="maxRightEdge" select="ddwrt:Max(/dsQueryResponse/Rows/Row/@nCcTileRightEdge)" /&gt;
                    &lt;xsl:variable name="maxBottomEdge" select="ddwrt:Max(/dsQueryResponse/Rows/Row/@nCcTileBottomEdge)" /&gt;
                    &lt;div class="nTilesContainer" style="height: {$maxBottomEdge}px; width: {$maxRightEdge}px"&gt;
                        &lt;xsl:apply-templates select="/dsQueryResponse/Rows" /&gt;
                    &lt;/div&gt;
                &lt;/xsl:when&gt;
                &lt;xsl:otherwise&gt;
                    &lt;!-- no tile --&gt;
                    &lt;div class="nTilesContainer" style="height: 100px; width: 100px"&gt;&lt;/div&gt;
                &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
        &lt;/div&gt;
        &lt;!-- save configuration data for access in the JS --&gt;
        &lt;script type="text/javascript"&gt;
        	nSPTiles.setup('&lt;xsl:value-of select="$TileGroupID" /&gt;', '&lt;xsl:value-of select="$GroupName" /&gt;', {animationTime:&lt;xsl:value-of select="$AnimationSpeedInMillisecond" /&gt;,animationTypeOn:'&lt;xsl:value-of select="$AnimationTypeOn" /&gt;',animationTypeOff:'&lt;xsl:value-of select="$AnimationTypeOff" /&gt;', onclick:&lt;xsl:value-of select="$TileOnClick" /&gt;});
            var toFixHTML = document.getElementById("&lt;xsl:value-of select="$TileGroupID" /&gt;").querySelectorAll(".nTileSlider, .nHTMLFix");
            for(var i = 0, num = toFixHTML.length; i &amp;lt; num; ++i)
            {
                toFixHTML[i].innerHTML = toFixHTML[i].innerText;
            }
        &lt;/script&gt;
    &lt;/xsl:template&gt;

    &lt;!-- the template for each tile --&gt;
    &lt;xsl:template match="Row"&gt;
    	&lt;xsl:variable name="nTileNotRenderedCheck" select="@nTileNotRenderedCheck" /&gt;
    	&lt;xsl:if test="$nTileNotRenderedCheck = '' or not(/dsQueryResponse/Rows/Row[@ID=$nTileNotRenderedCheck])"&gt;
	        &lt;div id="nTile_{@ID}" style="{@nCcTileStyle}"&gt;
	        	&lt;xsl:attribute name="onmouseenter"&gt;nSPTiles.hover(true, this, &lt;xsl:choose&gt;
	        		&lt;xsl:when test="not(@nIsHeading = 'Yes' or @nIsHeading = '1' or @nTileHTMLOverride != '')"&gt;true&lt;/xsl:when&gt;
	        		&lt;xsl:otherwise&gt;false&lt;/xsl:otherwise&gt;
	        	&lt;/xsl:choose&gt;, &lt;xsl:choose&gt;
	        		&lt;xsl:when test="@nTileZoomOnHover = 'Yes' or @nTileZoomOnHover = '1'"&gt;true&lt;/xsl:when&gt;
	        		&lt;xsl:otherwise&gt;false&lt;/xsl:otherwise&gt;
	        	&lt;/xsl:choose&gt;);&lt;/xsl:attribute&gt;
	        	&lt;xsl:attribute name="onmouseleave"&gt;nSPTiles.hover(false, this, &lt;xsl:choose&gt;
	        		&lt;xsl:when test="not(@nIsHeading = 'Yes' or @nIsHeading = '1' or @nTileHTMLOverride != '')"&gt;true&lt;/xsl:when&gt;
	        		&lt;xsl:otherwise&gt;false&lt;/xsl:otherwise&gt;
	        	&lt;/xsl:choose&gt;, &lt;xsl:choose&gt;
	        		&lt;xsl:when test="@nTileZoomOnHover = 'Yes' or @nTileZoomOnHover = '1'"&gt;true&lt;/xsl:when&gt;
	        		&lt;xsl:otherwise&gt;false&lt;/xsl:otherwise&gt;
	        	&lt;/xsl:choose&gt;);&lt;/xsl:attribute&gt;
	            &lt;!--&lt;xsl:attribute name="onclick"&gt;nSPTiles.openLink(this, '&lt;xsl:value-of select="@nTileLinkType" /&gt;', '&lt;xsl:call-template name="strip-tags"&gt;&lt;xsl:with-param name="text" select="normalize-space(@nTileLinkURL)"/&gt;&lt;/xsl:call-template&gt;', true);&lt;/xsl:attribute&gt;--&gt;
	            &lt;xsl:attribute name="onclick"&gt;nSPTiles.openLink(this, '&lt;xsl:value-of select="@nTileLinkType" /&gt;', '&lt;xsl:value-of select="@nTileLinkURL" /&gt;', true);&lt;/xsl:attribute&gt;
	            &lt;xsl:if test="@nTileCustomID != ''"&gt;
	                &lt;xsl:attribute name="id"&gt;&lt;xsl:value-of select="@nTileCustomID" /&gt;&lt;/xsl:attribute&gt;
	            &lt;/xsl:if&gt;
	            &lt;xsl:attribute name="class"&gt;
	                &lt;xsl:value-of select="@nTileCustomClassEs" /&gt; nTile nTile_&lt;xsl:value-of select="@ID" /&gt;&lt;xsl:if test="@nTileLinkType != 'none'"&gt; nTileLink&lt;/xsl:if&gt;&lt;xsl:choose&gt;&lt;xsl:when test="@nIsHeading = 'Yes' or @nIsHeading = '1'"&gt; nHeadingTile&lt;/xsl:when&gt;&lt;xsl:otherwise&gt; nSliderTile&lt;/xsl:otherwise&gt;&lt;/xsl:choose&gt;
	            &lt;/xsl:attribute&gt;
	            &lt;div class="nTileContentWrapper" style="{@nCcTileContentWrapperStyle}"&gt;
	            	&lt;xsl:choose&gt;
	            		&lt;xsl:when test="@nTileHTMLOverride != ''"&gt;&lt;div class="nHTMLFix"&gt;&lt;xsl:value-of select="@nTileHTMLOverride" disable-output-escaping="yes" /&gt;&lt;/div&gt;&lt;/xsl:when&gt;
	            		&lt;xsl:otherwise&gt;
		            		&lt;!-- do we have a tile background color --&gt;
			                &lt;xsl:if test="@nCcTileBackgroundClass != ''"&gt;
			                    &lt;div class="{@nCcTileBackgroundClass}" style="{@nCcTileBackgroundStyle}"&gt;&lt;/div&gt;
			                    &lt;xsl:if test="@nCcTileBackgroundClassOnHover != ''"&gt;
			                        &lt;div class="{@nCcTileBackgroundClassOnHover}" style="{@nCcTileBackgroundStyleOnHover}"&gt;&lt;/div&gt;
			                    &lt;/xsl:if&gt;
			                &lt;/xsl:if&gt;
			                &lt;!-- do we have a tile image --&gt;
			                &lt;xsl:if test="@nTileImageURL != ''"&gt;
			                    &lt;xsl:call-template name="makePositionHTML"&gt;
			                        &lt;xsl:with-param name="className"&gt;nTileImagePositionWrapper&lt;/xsl:with-param&gt;
			                        &lt;xsl:with-param name="tableStyle" select="@nCcTileImageAndFaTableStyle" /&gt;
			                        &lt;xsl:with-param name="row1Style" select="@nCcTileImagePositionStyle" /&gt;
			                        &lt;xsl:with-param name="cell1Content"&gt;
			                            &lt;div&gt;
			                                &lt;img class="{@nCcTileImageClass}" style="{@nCcTileImageStyle}" src="{@nTileImageURL}" /&gt;
			                                &lt;xsl:if test="@nTileImageURLOnHover != ''"&gt;
			                                    &lt;img class="{@nCcTileImageClassOnHover}" style="{@nCcTileImageStyleOnHover}" src="{@nTileImageURLOnHover}" /&gt;
			                                &lt;/xsl:if&gt;
			                            &lt;/div&gt;
			                        &lt;/xsl:with-param&gt;
			                    &lt;/xsl:call-template&gt;
			                &lt;/xsl:if&gt;
			                &lt;!-- do we have a FA icon--&gt;
			                &lt;xsl:if test="@nCcTileFAClass != ''"&gt;
			                    &lt;xsl:call-template name="makePositionHTML"&gt;
			                        &lt;xsl:with-param name="className"&gt;nTileFAPositionWrapper&lt;/xsl:with-param&gt;
			                        &lt;xsl:with-param name="tableStyle" select="@nCcTileImageAndFaTableStyle" /&gt;
			                        &lt;xsl:with-param name="row1Style" select="@nCcTileFAPositionStyle" /&gt;
			                        &lt;xsl:with-param name="cell1Content"&gt;
			                        	&lt;xsl:choose&gt;
			                        		&lt;xsl:when test="@nTileFAHTMLOverride != ''"&gt;&lt;span class="nHTMLFix"&gt;&lt;xsl:value-of select="@nTileFAHTMLOverride" disable-output-escaping="yes" /&gt;&lt;/span&gt;&lt;/xsl:when&gt;
			                        		&lt;xsl:otherwise&gt;
					                            &lt;span class="{@nCcTileFAClass}" style="{@nCcTileFAStyle}"&gt;&lt;/span&gt;
					                            &lt;xsl:if test="@nCcTileFAClassOnHover != ''"&gt;
					                                &lt;span class="{@nCcTileFAClassOnHover}" style="{@nCcTileFAStyleOnHover}"&gt;&lt;/span&gt;
					                            &lt;/xsl:if&gt;
					                        &lt;/xsl:otherwise&gt;
					                    &lt;/xsl:choose&gt;
			                        &lt;/xsl:with-param&gt;
			                    &lt;/xsl:call-template&gt;
			                &lt;/xsl:if&gt;
			                &lt;!-- do we have a heading or a slider --&gt;
			                &lt;xsl:choose&gt;
			                    &lt;xsl:when test="@nIsHeading = 'Yes' or @nIsHeading = '1'"&gt;
			                        &lt;xsl:call-template name="makePositionHTML"&gt;
			                            &lt;xsl:with-param name="className"&gt;nTileHeadingPositionWrapper&lt;/xsl:with-param&gt;
			                            &lt;xsl:with-param name="row1Style" select="@nCcHeadingPositionStyle" /&gt;
			                            &lt;xsl:with-param name="cell1Content"&gt;
			                                &lt;div class="{@nCcHeadingClass}" style="{@nCcHeadingStyle}"&gt;&lt;xsl:value-of select="@nHeadingContent" disable-output-escaping="yes" /&gt;&lt;/div&gt;
			                                &lt;xsl:if test="@nHeadingContentOnHover != ''"&gt;
			                                    &lt;div class="{@nCcHeadingClassOnHover}" style="{@nCcHeadingStyleOnHover}"&gt;&lt;xsl:value-of select="@nHeadingContentOnHover" disable-output-escaping="yes" /&gt;&lt;/div&gt;
			                                &lt;/xsl:if&gt;
			                            &lt;/xsl:with-param&gt;
			                        &lt;/xsl:call-template&gt;
			                    &lt;/xsl:when&gt;
			                    &lt;xsl:otherwise&gt;
			                        &lt;div class="nTileSliderContent" style="{@nCcSliderContentStyle}"&gt;
			                             &lt;!-- do we have a slider background color --&gt;
			                            &lt;xsl:if test="@nCcSliderBackgroundClass != ''"&gt;
			                                &lt;div class="{@nCcSliderBackgroundClass}" style="{@nCcSliderBackgroundStyle}"&gt;&lt;/div&gt;
			                                &lt;xsl:if test="@nCcSliderBackgroundClassOnHover != ''"&gt;
			                                    &lt;div class="{@nCcSliderBackgroundClassOnHover}" style="{@nCcSliderBackgroundStyleOnHover}"&gt;&lt;/div&gt;
			                                &lt;/xsl:if&gt;
			                            &lt;/xsl:if&gt;
			                            &lt;xsl:call-template name="makePositionHTML"&gt;
			                                &lt;xsl:with-param name="className"&gt;nTileSliderPositionWrapper&lt;/xsl:with-param&gt;
			                                &lt;xsl:with-param name="row1Style" select="@nCcHeadingPositionStyle" /&gt;
			                                &lt;xsl:with-param name="cell1Content"&gt;
			                                    &lt;div class="{@nCcHeadingClass}" style="{@nCcHeadingStyle}"&gt;&lt;xsl:value-of select="@nHeadingContent" disable-output-escaping="yes" /&gt;&lt;/div&gt;
			                                    &lt;xsl:if test="@nHeadingContentOnHover != ''"&gt;
			                                        &lt;div class="{@nCcHeadingClassOnHover}" style="{@nCcHeadingStyleOnHover}"&gt;&lt;xsl:value-of select="@nHeadingContentOnHover" disable-output-escaping="yes" /&gt;&lt;/div&gt;
			                                    &lt;/xsl:if&gt;
			                                &lt;/xsl:with-param&gt;
			                                &lt;xsl:with-param name="row2Style" select="@nCcSliderPositionStyle" /&gt;
			                                &lt;xsl:with-param name="cell2Content"&gt;
			                                    &lt;div class="{@nCcSliderBodyClass}" style="{@nCcSliderBodyStyle}" &gt;&lt;xsl:value-of select="@nSliderBodyContent" disable-output-escaping="yes" /&gt;&lt;/div&gt;
			                                &lt;/xsl:with-param&gt;
			                            &lt;/xsl:call-template&gt;
			                        &lt;/div&gt;
			                    &lt;/xsl:otherwise&gt;
			                &lt;/xsl:choose&gt;
	            		&lt;/xsl:otherwise&gt;
	            	&lt;/xsl:choose&gt;
	            &lt;/div&gt;
	        &lt;/div&gt;
	    &lt;/xsl:if&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</property>
        <property name="EnableOriginalValue" type="bool">False</property>
        <property name="CacheXslTimeOut" type="int">86400</property>
        <property name="Hidden" type="bool">False</property>
        <property name="ListName" type="string" null="true" />
        <property name="DataSourceID" type="string" />
        <property name="FireInitialRow" type="bool">True</property>
        <property name="ManualRefresh" type="bool">False</property>
        <property name="ViewFlags" type="Microsoft.SharePoint.SPViewFlags, Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c">Hidden</property>
        <property name="ChromeState" type="chromestate">Normal</property>
        <property name="AllowHide" type="bool">True</property>
        <property name="PageSize" type="int">-1</property>
        <property name="SampleData" type="string" null="true" />
        <property name="AsyncRefresh" type="bool">False</property>
        <property name="HelpMode" type="helpmode">Modeless</property>
        <property name="ListId" type="System.Guid, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">00000000-0000-0000-0000-000000000000</property>
        <property name="UseSQLDataSourcePaging" type="bool">True</property>
        <property name="AllowMinimize" type="bool">True</property>
        <property name="TitleUrl" type="string" />
        <property name="CatalogIconImageUrl" type="string" />
        <property name="DataSourcesString" type="string">&lt;%@ Register TagPrefix="sharepoint" Namespace="Microsoft.SharePoint.WebControls" Assembly="Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" %&gt;&lt;%@ Register TagPrefix="webpartpages" Namespace="Microsoft.SharePoint.WebPartPages" Assembly="Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" %&gt;&lt;sharepoint:SPDataSource runat="server" DataSourceMode="List" SelectCommand="&amp;lt;View&amp;gt;&amp;lt;Query&amp;gt;&amp;lt;Where&amp;gt;&amp;lt;And&amp;gt;&amp;lt;And&amp;gt;&amp;lt;Eq&amp;gt;&amp;lt;FieldRef Name=&amp;quot;Title&amp;quot;/&amp;gt;&amp;lt;Value Type=&amp;quot;Text&amp;quot;&amp;gt;{GroupName}&amp;lt;/Value&amp;gt;&amp;lt;/Eq&amp;gt;&amp;lt;Eq&amp;gt;&amp;lt;FieldRef Name=&amp;quot;nActive&amp;quot;/&amp;gt;&amp;lt;Value Type=&amp;quot;Boolean&amp;quot;&amp;gt;1&amp;lt;/Value&amp;gt;&amp;lt;/Eq&amp;gt;&amp;lt;/And&amp;gt;&amp;lt;Or&amp;gt;&amp;lt;IsNull&amp;gt;&amp;lt;FieldRef Name=&amp;quot;nTileViewPermissions&amp;quot; /&amp;gt;&amp;lt;/IsNull&amp;gt;&amp;lt;Or&amp;gt;&amp;lt;Membership Type=&amp;quot;CurrentUserGroups&amp;quot;&amp;gt;&amp;lt;FieldRef Name=&amp;quot;nTileViewPermissions&amp;quot; /&amp;gt;&amp;lt;/Membership&amp;gt;&amp;lt;Eq&amp;gt;&amp;lt;FieldRef Name=&amp;quot;nTileViewPermissions&amp;quot; /&amp;gt;&amp;lt;Value Type=&amp;quot;Integer&amp;quot;&amp;gt;&amp;lt;UserID/&amp;gt;&amp;lt;/Value&amp;gt;&amp;lt;/Eq&amp;gt;&amp;lt;/Or&amp;gt;&amp;lt;/Or&amp;gt;&amp;lt;/And&amp;gt;&amp;lt;/Where&amp;gt;&amp;lt;/Query&amp;gt;&amp;lt;/View&amp;gt;" UpdateCommand="" InsertCommand="" DeleteCommand="" UseInternalName="True" ID="dataformwebpart1"&gt;&lt;SelectParameters&gt;
&lt;asp:Parameter DefaultValue="nSPTiles1_5" Name="ListName"&gt;&lt;/asp:Parameter&gt;
&lt;webpartpages:DataFormParameter ParameterKey="GroupName" PropertyName="ParameterValues" DefaultValue="group 1" Name="GroupName"&gt;&lt;/webpartpages:DataFormParameter&gt;
&lt;/SelectParameters&gt;
&lt;/sharepoint:SPDataSource&gt;
</property>
        <property name="DisplayName" type="string" />
        <property name="PageType" type="Microsoft.SharePoint.PAGETYPE, Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c">PAGE_NORMALVIEW</property>
        <property name="Width" type="string" />
        <property name="ExportMode" type="exportmode">All</property>
        <property name="Direction" type="direction">NotSet</property>
        <property name="ViewContentTypeId" type="string" />
        <property name="HelpUrl" type="string" />
        <property name="XmlDefinition" type="string" />
        <property name="Default" type="string" />
        <property name="TitleIconImageUrl" type="string" />
        <property name="MissingAssembly" type="string">Cannot import this Web Part.</property>
      </properties>
    </data>
  </webPart>
</webParts>